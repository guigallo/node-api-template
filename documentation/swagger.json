{
  "openapi": "3.0.0",
  "info": {
    "title": "Node Base JWT",
    "description": "Base for projects using jwt auth. Project  on [Github](https://github.com/guigallo/node-base-jwt/).",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:3001/",
      "description": "local server for development"
    }
  ],
  "tags": [
    {
      "name": "Login",
      "description": "Authentication system"
    },
    {
      "name": "Users",
      "description": "Users API"
    }
  ],
  "paths": {
    "/log/in": {
      "post": {
        "summary": "Authenticate user",
        "tags": [
          "Login"
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Login"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Logged"
          },
          "401": {
            "$ref": "#/components/responses/InvalidPassword"
          },
          "404": {
            "$ref": "#/components/responses/UserNotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        }
      }
    },
    "/log/me": {
      "get": {
        "summary": "Get user data",
        "description": "Get user data with token",
        "tags": [
          "Login"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/Token"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/UserData"
          },
          "403": {
            "$ref": "#/components/responses/TokenRequired"
          },
          "404": {
            "$ref": "#/components/responses/UserNotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        }
      }
    },
    "/log/out": {
      "get": {
        "summary": "Logout user",
        "description": "Clear token from client",
        "tags": [
          "Login"
        ],
        "responses": {
          "200": {
            "description": "Logout success"
          }
        }
      }
    },
    "/newpassword": {
      "post": {
        "summary": "Change user password",
        "tags": [
          "Login"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/Token"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/NewPassword"
        },
        "responses": {
          "200": {
            "description": "Password changed"
          },
          "400": {
            "description": "Require password and new password on request body"
          },
          "403": {
            "description": "Actual password not correct"
          },
          "404": {
            "$ref": "#/components/responses/UserNotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        }
      }
    },
    "/users": {
      "get": {
        "summary": "Get all users",
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/Token"
          }
        ],
        "responses": {
          "200": {
            "description": "Password changed"
          },
          "403": {
            "$ref": "#/components/responses/TokenRequired"
          },
          "404": {
            "$ref": "#/components/responses/UserNotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        }
      },
      "post": {
        "summary": "Create user",
        "tags": [
          "Users"
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/CreaterUser"
        },
        "responses": {
          "201": {
            "description": "User created and logged in",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Logged"
                }
              }
            }
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        }
      }
    },
    "/users/{userId}": {
      "get": {
        "summary": "Get user by id",
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/Token"
          },
          {
            "$ref": "#/components/parameters/UserId"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ArrayUsers"
          },
          "403": {
            "$ref": "#/components/responses/TokenRequired"
          },
          "404": {
            "$ref": "#/components/responses/UserNotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        }
      },
      "put": {
        "summary": "Update user by id",
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/Token"
          },
          {
            "$ref": "#/components/parameters/UserId"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/CreaterUser"
        },
        "responses": {
          "201": {
            "description": "User updated"
          },
          "400": {
            "description": "Can't change the password"
          },
          "403": {
            "$ref": "#/components/responses/TokenRequired"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        }
      },
      "delete": {
        "summary": "Delete user by id",
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/Token"
          },
          {
            "$ref": "#/components/parameters/UserId"
          }
        ],
        "responses": {
          "201": {
            "description": "User deleted"
          },
          "403": {
            "$ref": "#/components/responses/TokenRequired"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Logged": {
        "type": "object",
        "properties": {
          "auth": {
            "type": "boolean",
            "default": true
          },
          "token": {
            "type": "string"
          }
        }
      },
      "User": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "password": {
            "type": "string"
          }
        }
      },
      "UserData": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string",
            "format": "email"
          }
        }
      },
      "NewPassword": {
        "type": "object",
        "properties": {
          "password": {
            "type": "string"
          },
          "newPassword": {
            "type": "string"
          }
        }
      }
    },
    "parameters": {
      "Token": {
        "in": "header",
        "name": "x-access-token",
        "description": "Authentication token to access API",
        "schema": {
          "type": "string"
        },
        "required": true
      },
      "UserId": {
        "name": "userId",
        "in": "path",
        "required": true,
        "description": "The ID of the user to return.",
        "schema": {
          "type": "string"
        }
      }
    },
    "requestBodies": {
      "Login": {
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "format": "email"
                },
                "password": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "NewPassword": {
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/NewPassword"
            }
          }
        }
      },
      "CreaterUser": {
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/User"
            }
          }
        }
      }
    },
    "responses": {
      "Logged": {
        "description": "Login sucess",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Logged"
            }
          }
        }
      },
      "UserData": {
        "description": "User data",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/UserData"
            }
          }
        }
      },
      "ArrayUsers": {
        "description": "Get user data",
        "content": {
          "application/json": {
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        }
      },
      "TokenRequired": {
        "description": "Token required"
      },
      "InvalidPassword": {
        "description": "Invalid password"
      },
      "UserNotFound": {
        "description": "User not found"
      },
      "InternalError": {
        "description": "Internal Error"
      }
    }
  }
}